pi :: 3.141592653589793

math.sqrt(1) :: 1.0

1 + 0 :: 1.0
0 + 1 :: 1.0
1 + 1 :: 2.0
1 + -1 :: 0.0
-1 + 1 :: 0.0
-1 + -1 :: -2.0
30 + 10 :: 40.0
30 + -10 :: 20.0
-30 + 10 :: -20.0
-30 + -10 :: -40.0

1 - 0 :: 1.0
0 - 1 :: -1.0
1 - 1 :: 0.0
1 - -1 :: 2.0
-1 - 1 :: -2.0
-1 - -1 :: 0.0
30 - 10 :: 20.0
30 - -10 :: 40.0
-30 - 10 :: -40.0
-30 - -10 :: -20.0

1 * 0 :: 0.0
0 * 1 :: 0.0
1 * 1 :: 1.0
1 * -1 :: -1.0
-1 * 1 :: -1.0
-1 * -1 :: 1.0
30 * 10 :: 300.0
30 * -10 :: -300.0
-30 * 10 :: -300.0
-30 * -10 :: 300.0

1 / 0 ::
0 / 1 :: 0.0
1 / 1 :: 1.0
1 / -1 :: -1.0
-1 / 1 :: -1.0
-1 / -1 :: 1.0
30 / 10 :: 3.0
30 / -10 :: -3.0
-30 / 10 :: -3.0
-30 / -10 :: 3.0
10 / 40 :: 0.25
10 / -40 :: -0.25
-10 / 40 :: -0.25
-10 / -40 :: 0.25

1^(1/2) :: 1.0
4^(1/2) :: 2.0
9^(1/2) :: 3.0
2^(1/2) :: 1.4142135623730951
-1^(1/2) ::
-4^(1/2) ::
-9^(1/2) ::
-2^(1/2) ::

5/0 ::
0/0 ::
-5/0 ::

math.sqrt(4) :: 2.0
math.sqrt(9) :: 3.0
math.sqrt(2) :: 1.4142135623730951
math.sqrt(-1) ::
math.sqrt(-4) ::
math.sqrt(-9) ::
math.sqrt(-2) ::
math.sqrt(1/0) ::

math.abs(2) :: 2.0
math.abs(2.5) :: 2.5
math.abs(-2) :: 2.0
math.abs(-2.5) :: 2.5
math.abs(0) :: 0.0
math.abs(1/0) ::

math.ceil(0) :: 0.0
math.ceil(0.0) :: 0.0
math.ceil(0.1) :: 1.0
math.ceil(0.49) :: 1.0
math.ceil(0.5) :: 1.0
math.ceil(0.51) :: 1.0
math.ceil(1) :: 1.0
math.ceil(1.0) :: 1.0
math.ceil(1/0) ::

math.floor(0) :: 0.0
math.floor(0.0) :: 0.0
math.floor(0.1) :: 0.0
math.floor(0.49) :: 0.0
math.floor(0.5) :: 0.0
math.floor(0.51) :: 0.0
math.floor(1) :: 1.0
math.floor(1.0) :: 1.0
math.floor(1/0) ::

math.round(0) :: 0.0
math.round(0.0) :: 0.0
math.round(0.1) :: 0.0
math.round(0.49) :: 0.0
math.round(0.5) :: 1.0
math.round(0.51) :: 1.0
math.round(1) :: 1.0
math.round(1.0) :: 1.0
math.round(1/0) ::
math.round(4.5) :: 5.0
math.round(5.5) :: 6.0
math.round(1/0) ::

math.sin(-4 * pi / 2) :: 2.4492935982947064e-16
math.sin(-3 * pi / 2) :: 1.0
math.sin(-2 * pi / 2) :: -1.2246467991473532e-16
math.sin(-1 * pi / 2) :: -1.0
math.sin(0 * pi / 2) :: 0.0
math.sin(1 * pi / 2) :: 1.0
math.sin(2 * pi / 2) :: 1.2246467991473532e-16
math.sin(3 * pi / 2) :: -1.0
math.sin(4 * pi / 2) :: -2.4492935982947064e-16
math.sin(1/0) ::

math.cos(-4 * pi / 2) :: 1.0
math.cos(-3 * pi / 2) :: -1.8369701987210297e-16
math.cos(-2 * pi / 2) :: -1.0
math.cos(-1 * pi / 2) :: 6.123233995736766e-17
math.cos(0 * pi / 2) :: 1.0
math.cos(1 * pi / 2) :: 6.123233995736766e-17
math.cos(2 * pi / 2) :: -1.0
math.cos(3 * pi / 2) :: -1.8369701987210297e-16
math.cos(4 * pi / 2) :: 1.0
math.cos(1/0) ::

math.tan(-4 * pi / 2) :: 2.4492935982947064e-16
math.tan(-3 * pi / 2) :: -5.443746451065123e+15
math.tan(-2 * pi / 2) :: 1.2246467991473532e-16
math.tan(-1 * pi / 2) :: -1.633123935319537e+16
math.tan(0 * pi / 2) :: 0.0
math.tan(1 * pi / 2) :: 1.633123935319537e+16
math.tan(2 * pi / 2) :: -1.2246467991473532e-16
math.tan(3 * pi / 2) :: 5.443746451065123e+15
math.tan(4 * pi / 2) :: -2.4492935982947064e-16
math.tan(1/0) ::

math.sinh(-1000.0) ::
math.sinh(-2.0) :: -3.626860407847019
math.sinh(-1.5) :: -2.1292794550948173
math.sinh(-1.0) :: -1.1752011936438014
math.sinh(-0.5) :: -0.5210953054937474
math.sinh(0.0) :: 0.0 
math.sinh(0.5) :: 0.5210953054937474
math.sinh(1.0) :: 1.1752011936438014
math.sinh(1.5) :: 2.1292794550948173
math.sinh(2.0) :: 3.626860407847019
math.sinh(1000.0) ::
math.sinh(1/0) ::

math.cosh(-1000.0) ::
math.cosh(-2.0) :: 3.7621956910836314
math.cosh(-1.5) :: 2.352409615243247
math.cosh(-1.0) :: 1.5430806348152437
math.cosh(-0.5) :: 1.1276259652063807
math.cosh(0.0) :: 1.0
math.cosh(0.5) :: 1.1276259652063807
math.cosh(1.0) :: 1.5430806348152437
math.cosh(1.5) :: 2.352409615243247
math.cosh(2.0) :: 3.7621956910836314
math.cosh(1000.0) ::
math.cosh(1/0) ::

math.tanh(-1000.0) :: -1.0
math.tanh(-2.0) :: -0.9640275800758169
math.tanh(-1.5) :: -0.9051482536448664
math.tanh(-1.0) :: -0.7615941559557649
math.tanh(-0.5) :: -0.46211715726000974
math.tanh(0.0) :: 0.0
math.tanh(0.5) :: 0.46211715726000974
math.tanh(1.0) :: 0.7615941559557649
math.tanh(1.5) :: 0.9051482536448664
math.tanh(2.0) :: 0.9640275800758169
math.tanh(1000.0) :: 1.0
math.tanh(1/0) ::

math.asin(-2.0) ::
math.asin(-1.5) ::
math.asin(-1.0) :: -1.5707963267948966
math.asin(-0.5) :: -0.5235987755982989
math.asin(0.0) :: 0.0
math.asin(0.5) :: 0.5235987755982989
math.asin(1.0) :: 1.5707963267948966
math.asin(1.5) ::
math.asin(2.0) ::
math.asin(1/0) ::

math.acos(-2.0) ::
math.acos(-1.5) ::
math.acos(-1.0) :: 3.141592653589793
math.acos(-0.5) :: 2.0943951023931957
math.acos(0.0) :: 1.5707963267948966
math.acos(0.5) :: 1.0471975511965979
math.acos(1.0) :: 0.0
math.acos(1.5) ::
math.acos(2.0) ::
math.acos(1/0) ::

math.atan(-2.0) :: -1.1071487177940904
math.atan(-1.5) :: -0.982793723247329
math.atan(-1.0) :: -0.7853981633974483
math.atan(-0.5) :: -0.4636476090008061
math.atan(0.0) :: 0.0
math.atan(0.5) :: 0.4636476090008061
math.atan(1.0) :: 0.7853981633974483
math.atan(1.5) :: 0.982793723247329
math.atan(2.0) :: 1.1071487177940904
math.atan(1/0) ::

math.asinh(-1000.0) :: -7.600902709541988
math.asinh(-100.0) :: -5.298342365610589
math.asinh(-10.0) :: -2.99822295029797
math.asinh(-1.0) :: -0.881373587019543
math.asinh(-0.1) :: -0.09983407889920758
math.asinh(0.0) :: 0.0
math.asinh(0.1) :: 0.09983407889920758
math.asinh(1.0) :: 0.881373587019543
math.asinh(10.0) :: 2.99822295029797
math.asinh(100.0) :: 5.298342365610589
math.asinh(1000.0) :: 7.600902709541988
math.asinh(1/0) ::

math.acosh(-1000.0) ::
math.acosh(-100.0) ::
math.acosh(-10.0) ::
math.acosh(-1.0) ::
math.acosh(-0.1) ::
math.acosh(0.0) ::
math.acosh(0.1) ::
math.acosh(1.0) :: 0.0
math.acosh(10.0) :: 2.993222846126381
math.acosh(100.0) :: 5.298292365610484
math.acosh(1000.0) :: 7.600902209541989
math.acosh(1/0) ::

math.atanh(-1000.0) ::
math.atanh(-100.0) ::
math.atanh(-10.0) ::
math.atanh(-1.0) ::
math.atanh(-0.1) :: -0.10033534773107558
math.atanh(0.0) :: 0.0
math.atanh(0.1) :: 0.10033534773107558
math.atanh(1.0) :: 
math.atanh(10.0) :: 
math.atanh(100.0) :: 
math.atanh(1000.0) :: 
math.atanh(1/0) ::

math.ln(-1.0) ::
math.ln(-0.5) ::
math.ln(0.0) ::
math.ln(0.5) :: -0.6931471805599453
math.ln(1.0) :: 0.0
math.ln(2.0) :: 0.6931471805599453
math.ln(4.0) :: 1.3862943611198906
math.ln(8.0) :: 2.0794415416798357
math.ln(1/0) ::

math.log2(-1.0) ::
math.log2(-0.5) ::
math.log2(0.0) ::
math.log2(0.5) :: -1.0
math.log2(1.0) :: 0.0
math.log2(2.0) :: 1.0
math.log2(4.0) :: 2.0
math.log2(8.0) :: 3.0
math.log2(1/0) ::

math.log10(-1.0) ::
math.log10(-0.5) ::
math.log10(0.0) ::
math.log10(0.5) :: -0.3010299956639812
math.log10(1.0) :: 0.0
math.log10(2.0) :: 0.3010299956639812
math.log10(4.0) :: 0.6020599913279624
math.log10(8.0) :: 0.9030899869919435
math.log10(10.0) :: 1.0
math.log10(50.0) :: 1.6989700043360187
math.log10(100.0) :: 2.0
math.log10(1/0) ::

math.atan2(-0.0, -1.0) :: -3.141592653589793
math.atan2(-1.0, -1.0) :: -2.356194490192345
math.atan2(-1.0, 0.0) :: -1.5707963267948966
math.atan2(-1.0, 1.0) :: -0.7853981633974483
math.atan2(-0.0, 1.0) :: -0.0
math.atan2(0.0, 1.0) :: 0.0
math.atan2(1.0, 1.0) :: 0.7853981633974483
math.atan2(1.0, 0.0) :: 1.5707963267948966
math.atan2(1.0, -1.0) :: 2.356194490192345
math.atan2(0.0, -1.0) :: 3.141592653589793
math.atan2(1/0, 1) ::
math.atan2(1, 1/0) ::
math.atan2(1/0, 1/0) ::

math.log(8, 2) :: 3.0
math.log(0.5, 2) :: -1.0
math.log(81, 3) :: 4.0

math.min(-1, 1) :: -1.0
math.min(1, -1) :: -1.0
math.min(1, 1) :: 1.0
math.min(1, 2) :: 1.0
math.min(1/0, 1) :: 1.0
math.min(1/0, -1) :: -1.0
math.min(1, 1/0) :: 1.0
math.min(-1, 1/0) :: -1.0
math.min(1/0, 1/0) ::

math.max(-1, 1) :: 1.0
math.max(1, -1) :: 1.0
math.max(1, 1) :: 1.0
math.max(1, 2) :: 2.0
math.max(1/0, 1) :: 1.0
math.max(1/0, -1) :: -1.0
math.max(1, 1/0) :: 1.0
math.max(-1, 1/0) :: -1.0
math.max(1/0, 1/0) ::

#math.sum(Array.count(5, 3)) :: 18.0
#math.sum(Array.count(-5, 3)) :: -12.0
#math.sum(Array.repeat(6, 3)) :: 18.0
#math.sum(Array.repeat(-6, 3)) :: -18.0
#math.sum(Array.repeat(1/0, 5)) :: 0.0
#math.sum(Array.repeat(1, 0)) :: 0.0

#math.prod(Array.count(5, 3)) :: 210.0
#math.prod(Array.count(-5, 3)) :: -60.0
#math.prod(Array.repeat(6, 3)) :: 216.0
#math.prod(Array.repeat(-6, 3)) :: -216.0
#math.prod(Array.repeat(1/0, 5)) :: 1.0
#math.prod(Array.repeat(1, 0)) :: 1.0

#math.mean(Array.count(5, 3)) :: 6.0
#math.mean(Array.count(-5, 3)) :: -4.0
#math.mean(Array.repeat(6, 3)) :: 6.0
#math.mean(Array.repeat(-6, 3)) :: -6.0
#math.mean(Array.repeat(1/0, 5)) :: 0.0
#math.mean(Array.repeat(1, 0)) ::

#math.variance(Array.repeat(-1, 5)) :: 0.0
#math.variance(Array.repeat(0, 5)) :: 0.0
#math.variance(Array.repeat(1, 5)) :: 0.0
#math.variance(Array.repeat(1/0, 5)) :: 0.0
#math.variance(Array.count(1, 3)) :: 0.6666666666666666
#math.variance(Array.count(-1, -3)) :: 0.6666666666666666
#math.variance(Array.repeat(1, 0)) ::

#math.stddev(Array.repeat(-1, 5)) :: 0.0
#math.stddev(Array.repeat(0, 5)) :: 0.0
#math.stddev(Array.repeat(1, 5)) :: 0.0
#math.stddev(Array.repeat(1/0, 5)) :: 0.0
#math.stddev(Array.count(1, 3)) :: 0.816496580927726
#math.stddev(Array.count(-1, -3)) :: 0.816496580927726
#math.stddev(Array.repeat(1, 0)) ::

math.array_min(Test.a) :: 1.0
#math.array_min(Array.repeat(3, 5)) :: 3.0
#math.array_min(Array.repeat(0, 5)) :: 0.0
#math.array_min(Array.repeat(-3, 5)) :: -3.0
#math.array_min(Array.count(1, 3)) :: 1.0
#math.array_min(Array.count(-1, 3)) :: -1.0
#math.array_min(Array.count(1, -3)) :: -1.0
#math.array_min(Array.count(-1, -3)) :: -3.0

math.array_max(Test.a) :: 5.0
#math.array_max(Array.repeat(3, 5)) :: 3.0
#math.array_max(Array.repeat(0, 5)) :: 0.0
#math.array_max(Array.repeat(-3, 5)) :: -3.0
#math.array_max(Array.count(1, 3)) :: 3.0
#math.array_max(Array.count(-1, 3)) :: 1.0
#math.array_max(Array.count(1, -3)) :: 1.0
#math.array_max(Array.count(-1, -3)) :: -1.0

math.atan2(0, -1) :: 3.141592653589793
math.atan2(-1, -1) :: -2.356194490192345
math.log10(1000) :: 3.0
math.log(16, 4) :: 2.0
math.mean(Test.a) :: 3.0
math.min(1, 4) :: 1.0
math.max(1, 4) :: 4.0
math.array_min(Test.a) :: 1.0
math.array_max(Test.a) :: 5.0
9999^9999 ::
