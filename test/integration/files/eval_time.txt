number(Test.t1) :: 1440408660.0 :: number
second(Test.t5) :: 32.0 :: number
minute(Test.t5) :: 41.0 :: number
hour(Test.t5) :: 13.0 :: number
day(Test.t5) :: 26.0 :: number
weekday(Test.t5) :: 3.0 :: number
week(Test.t5) :: 35.0 :: number
month(Test.t5) :: 8.0 :: number
year(Test.t5) :: 2015.0 :: number
am_pm(Test.t5) :: "PM" :: text
weekday_name(Test.t5) :: "Wednesday" :: text
month_name(Test.t5) :: "August" :: text
elapsed(Test.t5, Test.t4) :: 72632.0 :: number
elapsed(Test.t5, Test.t4, "seconds") :: 72632.0 :: number
elapsed(Test.t5, Test.t4, "minutes") :: 1210.5333333333333 :: number
elapsed(Test.t5, Test.t4, "hours") :: 20.175555555555555 :: number
elapsed(Test.t5, Test.t4, "days") :: 0.8406481481481481 :: number
elapsed(Test.t5, Test.t4, "weeks") :: 0.1200925925925926 :: number
elapsed(Test.t5, Test.t4, "months") :: 0.027619397462720737 :: number
elapsed(Test.t5, Test.t4, "years") :: 0.002301616455226728 :: number
offset(Test.t1, 5, "seconds") :: 2015/08/24 09:31:05 :: timestamp
offset(Test.t1, 5, "minutes") :: 2015/08/24 09:36:00 :: timestamp
offset(Test.t1, 5, "hours") :: 2015/08/24 14:31:00 :: timestamp
offset(Test.t1, 5, "days") :: 2015/08/29 09:31:00 :: timestamp
offset(Test.t1, 5, "weeks") :: 2015/09/28 09:31:00 :: timestamp
offset(Test.t1, 5, "months") :: 2016/01/24 09:31:00 :: timestamp
offset(Test.t1, 5, "years") :: 2020/08/24 09:31:00 :: timestamp
offset(Test.t1, 5, "fleem") :: 2015/08/24 09:31:00 :: timestamp
Test.t1 < Test.t2 :: true :: bool
Test.t1 < Test.t1 :: false :: bool
Test.t2 < Test.t1 :: false :: bool
Test.t1 <= Test.t2 :: true :: bool
Test.t1 <= Test.t1 :: true :: bool
Test.t2 <= Test.t1 :: false :: bool
Test.t1 > Test.t2 :: false :: bool
Test.t1 > Test.t1 :: false :: bool
Test.t2 > Test.t1 :: true :: bool
Test.t1 >= Test.t2 :: false :: bool
Test.t1 >= Test.t1 :: true :: bool
Test.t2 >= Test.t1 :: true :: bool
Test.t1 == Test.t2 :: false :: bool
Test.t1 == Test.t1 :: true :: bool
Test.t2 == Test.t1 :: false :: bool
Test.t1 != Test.t2 :: true :: bool
Test.t1 != Test.t1 :: false :: bool
Test.t2 != Test.t1 :: true :: bool
datetime(1, 1, 1, 1, 1, 1) :: 0001/01/01 01:01:01 :: timestamp
datetime(1, 1, 1, 1, 1) :: 0001/01/01 01:01:00 :: timestamp
datetime(1, 1, 1, 1) :: 0001/01/01 01:00:00 :: timestamp
datetime(1, 1, 1) :: 0001/01/01 00:00:00 :: timestamp
datetime(1, 1) :: 0001/01/01 00:00:00 :: timestamp
datetime(1) :: 0001/01/01 00:00:00 :: timestamp
datetime(100000) :: 100000/01/01 00:00:00 :: timestamp
datetime(-100000) :: -100000/01/01 00:00:00 :: timestamp
datetime(1, 1, 1, 1, 1, 60) :: 0001/01/01 01:02:00 :: timestamp
datetime(1, 1, 1, 1, 1, 61) :: 0001/01/01 01:02:01 :: timestamp
datetime(1, 1, 1, 1, 1, 361) :: 0001/01/01 01:07:01 :: timestamp
datetime(1, 1, 1, 1, 60, 0) :: 0001/01/01 02:00:00 :: timestamp
datetime(1, 1, 1, 1, 61, 0) :: 0001/01/01 02:01:00 :: timestamp
datetime(1, 1, 1, 1, 361, 0) :: 0001/01/01 07:01:00 :: timestamp
datetime(1, 1, 1, 24, 0, 0) :: 0001/01/02 00:00:00 :: timestamp
datetime(1, 1, 1, 25, 0, 0) :: 0001/01/02 01:00:00 :: timestamp
datetime(1, 1, 1, 75, 0, 0) :: 0001/01/04 03:00:00 :: timestamp
datetime(1, 6, 31, 0, 0, 0) :: 0001/07/01 00:00:00 :: timestamp
datetime(1, 6, 32, 0, 0, 0) :: 0001/07/02 00:00:00 :: timestamp
datetime(1, 6, 62, 0, 0, 0) :: 0001/08/01 00:00:00 :: timestamp
datetime(1, 13, 1, 0, 0, 0) :: 0002/01/01 00:00:00 :: timestamp
datetime(1, 14, 1, 0, 0, 0) :: 0002/02/01 00:00:00 :: timestamp
datetime(1, 80, 1, 0, 0, 0) :: 0007/08/01 00:00:00 :: timestamp
datetime(0, 0, 0, 0, 0, 0) :: -0001/11/30 00:00:00 :: timestamp
